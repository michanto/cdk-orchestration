{
 "Resources": {
  "ContentsAreEqualTask6E9A79F0": {
   "Type": "Custom::EqualsComparisonAssertion",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "CDKORCHCUSTOMRESOURCEResourcesCDKORCHCUSTOMRESOURCEProviderframeworkonEvent4AE15604",
      "Arn"
     ]
    },
    "EncodedProperties": {
     "Fn::Base64": {
      "Fn::Join": [
       "",
       [
        "{\"Create\":{\"service\":\"Lambda\",\"action\":\"invoke\",\"parameters\":{\"FunctionName\":\"",
        {
         "Ref": "EqualsFunction495237D7"
        },
        "\",\"Payload\":\"{\\\"expected\\\":{\\\"result\\\":\\\"{\\\\\\\"$Exact\\\\\\\":\\\\\\\"Data\\\\\\\"}\\\"},\\\"actual\\\":{\\\"result\\\":\\\"",
        {
         "Fn::ImportValue": "S3ResourcesInteg:ExportsOutputFnGetAttReaderC968FCB1Some184BF997"
        },
        "\\\"}}\"},\"physicalResourceId\":{\"id\":\"Invoke",
        {
         "Ref": "EqualsFunction495237D7"
        },
        "-8bbad989f17f31a4d42a98db1c66ba63\"}},\"Update\":{\"service\":\"Lambda\",\"action\":\"invoke\",\"parameters\":{\"FunctionName\":\"",
        {
         "Ref": "EqualsFunction495237D7"
        },
        "\",\"Payload\":\"{\\\"expected\\\":{\\\"result\\\":\\\"{\\\\\\\"$Exact\\\\\\\":\\\\\\\"Data\\\\\\\"}\\\"},\\\"actual\\\":{\\\"result\\\":\\\"",
        {
         "Fn::ImportValue": "S3ResourcesInteg:ExportsOutputFnGetAttReaderC968FCB1Some184BF997"
        },
        "\\\"}}\"},\"physicalResourceId\":{\"id\":\"Invoke",
        {
         "Ref": "EqualsFunction495237D7"
        },
        "-8bbad989f17f31a4d42a98db1c66ba63\"}},\"ResponseBufferField\":\"Payload\",\"RequestedOutputs\":[],\"salt\":1716416931084}"
       ]
      ]
     }
    }
   },
   "DependsOn": [
    "ContentsAreEqualTaskCustomResourcePolicyDD806DC2"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete"
  },
  "ContentsAreEqualTaskCustomResourcePolicyDD806DC2": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "lambda:Invoke",
       "Effect": "Allow",
       "Resource": "*"
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "ContentsAreEqualTaskCustomResourcePolicyDD806DC2",
    "Roles": [
     {
      "Ref": "CDKORCHCUSTOMRESOURCEResourcesCDKORCHCUSTOMRESOURCERole685CF4F2"
     }
    ]
   }
  },
  "EqualsFunctionServiceRole1952C691": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   }
  },
  "EqualsFunction495237D7": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "ZipFile": "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.equalsComparison = void 0;\nfunction log(message) {\nif (process.env.LogLevel) {\nconsole.log(JSON.stringify(message));\n}\n}\n\nasync function equalsComparison(event, context) {\nlog({ Event: event });\nlog({ Context: context });\nlet expected = JSON.parse(event.expected.result)?.['$Exact'];\nif (!expected) {\nthrow new Error('Did not get an expected.');\n}\nlet actual = event.actual.result;\nif (!actual) {\nthrow new Error('Did not get an actual.');\n}\nif (expected != actual) {\nthrow new Error(`Expected ${expected}, got ${actual}.`);\n}\n}\nexports.equalsComparison = equalsComparison;"
    },
    "Environment": {
     "Variables": {
      "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
      "LogLevel": "18446744073709552000"
     }
    },
    "Handler": "index.equalsComparison",
    "Role": {
     "Fn::GetAtt": [
      "EqualsFunctionServiceRole1952C691",
      "Arn"
     ]
    },
    "Runtime": "nodejs18.x"
   },
   "DependsOn": [
    "EqualsFunctionServiceRole1952C691"
   ]
  },
  "CDKORCHCUSTOMRESOURCEResourcesCDKORCHCUSTOMRESOURCERole685CF4F2": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     },
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaRole"
       ]
      ]
     }
    ]
   }
  },
  "CDKORCHCUSTOMRESOURCEResourcesCDKORCHCUSTOMRESOURCEOnEventB60C9E76": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "bb4acc28699b92231855ea05193fbb17a2fe62445f61983472fc49e74a237347.zip"
    },
    "Environment": {
     "Variables": {
      "LogLevel": "18446744073709552000"
     }
    },
    "Handler": "index.handler",
    "Role": {
     "Fn::GetAtt": [
      "CDKORCHCUSTOMRESOURCEResourcesCDKORCHCUSTOMRESOURCERole685CF4F2",
      "Arn"
     ]
    },
    "Runtime": "nodejs20.x",
    "Timeout": 120
   },
   "DependsOn": [
    "CDKORCHCUSTOMRESOURCEResourcesCDKORCHCUSTOMRESOURCERole685CF4F2"
   ]
  },
  "CDKORCHCUSTOMRESOURCEResourcesCDKORCHCUSTOMRESOURCEProviderframeworkonEventServiceRoleCBAF3CDB": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   }
  },
  "CDKORCHCUSTOMRESOURCEResourcesCDKORCHCUSTOMRESOURCEProviderframeworkonEventServiceRoleDefaultPolicy9B953B1F": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "lambda:InvokeFunction",
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "CDKORCHCUSTOMRESOURCEResourcesCDKORCHCUSTOMRESOURCEOnEventB60C9E76",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "CDKORCHCUSTOMRESOURCEResourcesCDKORCHCUSTOMRESOURCEOnEventB60C9E76",
             "Arn"
            ]
           },
           ":*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "CDKORCHCUSTOMRESOURCEResourcesCDKORCHCUSTOMRESOURCEProviderframeworkonEventServiceRoleDefaultPolicy9B953B1F",
    "Roles": [
     {
      "Ref": "CDKORCHCUSTOMRESOURCEResourcesCDKORCHCUSTOMRESOURCEProviderframeworkonEventServiceRoleCBAF3CDB"
     }
    ]
   }
  },
  "CDKORCHCUSTOMRESOURCEResourcesCDKORCHCUSTOMRESOURCEProviderframeworkonEvent4AE15604": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "7382a0addb9f34974a1ea6c6c9b063882af874828f366f5c93b2b7b64db15c94.zip"
    },
    "Description": "AWS CDK resource provider framework - onEvent (S3ResourcesAssertions/CDKORCHCUSTOMRESOURCE::Resources/CDKORCHCUSTOMRESOURCEProvider)",
    "Environment": {
     "Variables": {
      "USER_ON_EVENT_FUNCTION_ARN": {
       "Fn::GetAtt": [
        "CDKORCHCUSTOMRESOURCEResourcesCDKORCHCUSTOMRESOURCEOnEventB60C9E76",
        "Arn"
       ]
      },
      "LogLevel": "18446744073709552000"
     }
    },
    "Handler": "framework.onEvent",
    "Role": {
     "Fn::GetAtt": [
      "CDKORCHCUSTOMRESOURCEResourcesCDKORCHCUSTOMRESOURCEProviderframeworkonEventServiceRoleCBAF3CDB",
      "Arn"
     ]
    },
    "Runtime": "nodejs18.x",
    "Timeout": 900
   },
   "DependsOn": [
    "CDKORCHCUSTOMRESOURCEResourcesCDKORCHCUSTOMRESOURCEProviderframeworkonEventServiceRoleDefaultPolicy9B953B1F",
    "CDKORCHCUSTOMRESOURCEResourcesCDKORCHCUSTOMRESOURCEProviderframeworkonEventServiceRoleCBAF3CDB"
   ]
  },
  "MetadataAreEqualTaskADCEB8FB": {
   "Type": "Custom::EqualsComparisonAssertion",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "CDKORCHCUSTOMRESOURCEResourcesCDKORCHCUSTOMRESOURCEProviderframeworkonEvent4AE15604",
      "Arn"
     ]
    },
    "EncodedProperties": {
     "Fn::Base64": {
      "Fn::Join": [
       "",
       [
        "{\"Create\":{\"service\":\"Lambda\",\"action\":\"invoke\",\"parameters\":{\"FunctionName\":\"",
        {
         "Ref": "EqualsFunction495237D7"
        },
        "\",\"Payload\":\"{\\\"expected\\\":{\\\"result\\\":\\\"{\\\\\\\"$Exact\\\\\\\":\\\\\\\"Michael\\\\\\\"}\\\"},\\\"actual\\\":{\\\"result\\\":\\\"",
        {
         "Fn::ImportValue": "S3ResourcesInteg:ExportsOutputFnGetAttMdReader891AE0B9MetadatamymetadataE62E86E6"
        },
        "\\\"}}\"},\"physicalResourceId\":{\"id\":\"Invoke",
        {
         "Ref": "EqualsFunction495237D7"
        },
        "-bf5c419d30b76d4755bb9507a76655a3\"}},\"Update\":{\"service\":\"Lambda\",\"action\":\"invoke\",\"parameters\":{\"FunctionName\":\"",
        {
         "Ref": "EqualsFunction495237D7"
        },
        "\",\"Payload\":\"{\\\"expected\\\":{\\\"result\\\":\\\"{\\\\\\\"$Exact\\\\\\\":\\\\\\\"Michael\\\\\\\"}\\\"},\\\"actual\\\":{\\\"result\\\":\\\"",
        {
         "Fn::ImportValue": "S3ResourcesInteg:ExportsOutputFnGetAttMdReader891AE0B9MetadatamymetadataE62E86E6"
        },
        "\\\"}}\"},\"physicalResourceId\":{\"id\":\"Invoke",
        {
         "Ref": "EqualsFunction495237D7"
        },
        "-bf5c419d30b76d4755bb9507a76655a3\"}},\"ResponseBufferField\":\"Payload\",\"RequestedOutputs\":[],\"salt\":1716416931084}"
       ]
      ]
     }
    }
   },
   "DependsOn": [
    "MetadataAreEqualTaskCustomResourcePolicyF7CA1266"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete"
  },
  "MetadataAreEqualTaskCustomResourcePolicyF7CA1266": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "lambda:Invoke",
       "Effect": "Allow",
       "Resource": "*"
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "MetadataAreEqualTaskCustomResourcePolicyF7CA1266",
    "Roles": [
     {
      "Ref": "CDKORCHCUSTOMRESOURCEResourcesCDKORCHCUSTOMRESOURCERole685CF4F2"
     }
    ]
   }
  },
  "AwsApiCallCloudFormationlistExports": {
   "Type": "Custom::DeployAssert@SdkCallCloudFormationlistExports",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "SingletonFunction1488541a7b23466481b69b4408076b81HandlerCD40AE9F",
      "Arn"
     ]
    },
    "service": "CloudFormation",
    "api": "listExports",
    "expected": "{\"$ObjectLike\":{\"Exports\":{\"$ArrayWith\":[{\"$ObjectLike\":{}}]}}}",
    "parameters": {},
    "flattenResponse": "false",
    "salt": "1716416932192"
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete"
  },
  "SingletonFunction1488541a7b23466481b69b4408076b81Role37ABCE73": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Version": "2012-10-17",
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ]
    },
    "ManagedPolicyArns": [
     {
      "Fn::Sub": "arn:${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
     }
    ],
    "Policies": [
     {
      "PolicyName": "Inline",
      "PolicyDocument": {
       "Version": "2012-10-17",
       "Statement": [
        {
         "Action": [
          "cloudformation:ListExports"
         ],
         "Effect": "Allow",
         "Resource": [
          "*"
         ]
        },
        {
         "Effect": "Allow",
         "Action": [
          "cloudFormation:List*"
         ],
         "Resource": [
          "*"
         ]
        }
       ]
      }
     }
    ]
   }
  },
  "SingletonFunction1488541a7b23466481b69b4408076b81HandlerCD40AE9F": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Runtime": "nodejs18.x",
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "4984c845346313a408899c8ff361d3b7b97953a9d4202e47694ef2a101f4b5c3.zip"
    },
    "Timeout": 120,
    "Handler": "index.handler",
    "Role": {
     "Fn::GetAtt": [
      "SingletonFunction1488541a7b23466481b69b4408076b81Role37ABCE73",
      "Arn"
     ]
    }
   }
  }
 },
 "Outputs": {
  "AssertionResultsAwsApiCallCloudFormationlistExports": {
   "Value": {
    "Fn::GetAtt": [
     "AwsApiCallCloudFormationlistExports",
     "assertion"
    ]
   }
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}